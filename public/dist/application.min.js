"use strict";var ApplicationConfiguration=function(){var applicationModuleName="wave-website",applicationModuleVendorDependencies=["textAngular","ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","ngCookies","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("bios"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("jobs"),ApplicationConfiguration.registerModule("partners"),ApplicationConfiguration.registerModule("projects"),ApplicationConfiguration.registerModule("stories"),ApplicationConfiguration.registerModule("users"),angular.module("bios").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Our Team","bios","dropdown","/bios(/create)?",!0),Menus.addSubMenuItem("topbar","bios","View Our Team","bios",null,!0),Menus.addSubMenuItem("topbar","bios","New Bio","bios/create",null,!1)}]),angular.module("bios").config(["$stateProvider",function($stateProvider){$stateProvider.state("listBios",{url:"/bios",templateUrl:"modules/bios/views/list-bios.client.view.html"}).state("createBio",{url:"/bios/create",templateUrl:"modules/bios/views/create-bio.client.view.html"}).state("viewBio",{url:"/bios/:bioId",templateUrl:"modules/bios/views/view-bio.client.view.html"}).state("editBio",{url:"/bios/:bioId/edit",templateUrl:"modules/bios/views/edit-bio.client.view.html"})}]),angular.module("bios").controller("BiosController",["$scope","$upload","$stateParams","$location","Authentication","Bios","Uploads",function($scope,$upload,$stateParams,$location,Authentication,Bios,Uploads){$scope.authentication=Authentication,$scope.allowFullScreen(!1),$scope.onFileSelect=function($files){$scope.photo=$files[0]},$scope.initSelectedTeams=function(){var selectedTeams={};selectedTeams.Executive=!1,selectedTeams["Board of Directors"]=!1,selectedTeams["Power Electronics Engineering"]=!1,selectedTeams["Software Engineering"]=!1,selectedTeams["Mechanical Engineering"]=!1,selectedTeams["Manufacturing Engineering"]=!1,$scope.selectedTeams=selectedTeams};var arrayContains=function(array,value){return-1===array.indexOf(value)?!1:!0},readTeamsFromBioToSelected=function(bio){for(var team in $scope.selectedTeams)arrayContains(bio.teams,team)&&($scope.selectedTeams[team]=!0)},addSelectedTeamsToBio=function(bio){for(var team in $scope.selectedTeams)if($scope.selectedTeams[team]===!0)arrayContains(bio.teams,team)||bio.teams.push(team);else if(arrayContains(bio.teams,team)){var index=bio.teams.indexOf(team);bio.teams.splice(index,1)}};$scope.selectBio=function(bio){$scope.mouseOverBioId=bio._id,$scope.displayBioName=bio.name,$scope.displayBioTitle=bio.title},$scope.isSelected=function(bioID){return $scope.mouseOverBioId===bioID},$scope.create=function(){var bio=new Bios({name:this.name,title:this.title,teams:[]});addSelectedTeamsToBio(bio);var errorFunction=function(errorResponse){$scope.error=errorResponse.data.message};Uploads.upload($scope.photo).success(function(data){bio.photo=data.files[0].url,bio.$save(function(response){$location.path("bios/"+response._id)},errorFunction)}).error(errorFunction),this.name="",this.title=""},$scope.remove=function(bio){if(bio){bio.$remove();for(var i in $scope.bios)$scope.bios[i]===bio&&$scope.bios.splice(i,1)}else $scope.bio.$remove(function(){$location.path("bios")})},$scope.update=function(){var bio=$scope.bio;addSelectedTeamsToBio(bio);var errorFunction=function(errorResponse){$scope.error=errorResponse.data.message},updateBio=function(){bio.$update(function(){$location.path("bios/"+bio._id)},errorFunction)};"undefined"!=typeof $scope.photo?Uploads.updatePhoto($scope.photo,bio,updateBio):updateBio()},$scope.find=function(){var bioBuckets={};bioBuckets.Executive=[],bioBuckets["Board of Directors"]=[],bioBuckets["Power Electronics Engineering"]=[],bioBuckets["Software Engineering"]=[],bioBuckets["Mechanical Engineering"]=[],bioBuckets["Manufacturing Engineering"]=[],$scope.bios=Bios.query().$promise.then(function(bios){for(var i=0;i<bios.length;i++)for(var j=0;j<bios[i].teams.length;j++)bioBuckets[bios[i].teams[j]].push(bios[i])}),$scope.bioBuckets=bioBuckets},$scope.findOne=function(){$scope.initSelectedTeams(),$scope.bio=Bios.get({bioId:$stateParams.bioId},function(bio){readTeamsFromBioToSelected(bio)})}}]),angular.module("bios").factory("Bios",["$resource",function($resource){return $resource("bios/:bioId",{bioId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("FullScreenController",["$scope",function($scope){$scope.allowFullScreen=function(shouldAllow){$scope.shouldAllowFullScreen=shouldAllow,this.$on("$destroy",function(){$scope.shouldAllowFullScreen=!shouldAllow})}}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","$http",function($scope,Authentication,$http){$scope.authentication=Authentication,$scope.allowFullScreen(!0),$scope.tweets=[],$http.get("/tweets").success(function(data){$scope.tweets=data.statuses})}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:roles||this.defaultRoles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:roles||this.defaultRoles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").service("Uploads",["$upload","$http",function($upload,$http){this.upload=function(filePath){return $upload.upload({url:"/uploads",method:"POST",data:{},withCredentials:!0,file:filePath})},this.delete=function(uploadUrl){return $http.delete(uploadUrl)},this.updatePhoto=function(newPath,photoObj,saveCallback){$http.delete(photoObj.photo).success(function(){$upload.upload({url:"/uploads",method:"POST",data:{},withCredentials:!0,file:newPath}).success(function(data){photoObj.photo=data.files[0].url,saveCallback()})})}}]),angular.module("jobs").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Jobs","jobs","dropdown","/jobs(/create)?"),Menus.addSubMenuItem("topbar","jobs","List Jobs","jobs"),Menus.addSubMenuItem("topbar","jobs","New Job","jobs/create")}]),angular.module("jobs").config(["$stateProvider",function($stateProvider){$stateProvider.state("listJobs",{url:"/jobs",templateUrl:"modules/jobs/views/list-jobs.client.view.html"}).state("createJob",{url:"/jobs/create",templateUrl:"modules/jobs/views/create-job.client.view.html"}).state("viewJob",{url:"/jobs/:jobId",templateUrl:"modules/jobs/views/view-job.client.view.html"}).state("editJob",{url:"/jobs/:jobId/edit",templateUrl:"modules/jobs/views/edit-job.client.view.html"})}]),angular.module("jobs").controller("JobsController",["$scope","$stateParams","$location","Authentication","Jobs","$anchorScroll",function($scope,$stateParams,$location,Authentication,Jobs,$anchorScroll){$scope.authentication=Authentication,$scope.create=function(){var job=new Jobs({name:this.name,responsibilities:this.responsibilities,description:this.description,qualifications:this.qualifications});job.$save(function(response){$location.path("jobs/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name="",this.responsibilities="",this.description="",this.qualifications=""},$scope.remove=function(job){if(job){job.$remove();for(var i in $scope.jobs)$scope.jobs[i]===job&&$scope.jobs.splice(i,1)}else $scope.job.$remove(function(){$location.path("jobs")})},$scope.update=function(){var job=$scope.job;job.$update(function(){$location.path("jobs/"+job._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.jobs=Jobs.query()},$scope.findOne=function(){$scope.job=Jobs.get({jobId:$stateParams.jobId})},$scope.scrollToJob=function(id){$location.hash(id),$anchorScroll()}}]),angular.module("jobs").factory("Jobs",["$resource",function($resource){return $resource("jobs/:jobId",{jobId:"@_id"},{update:{method:"PUT"}})}]),angular.module("partners").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Partners","partners","dropdown","/partners(/create)?"),Menus.addSubMenuItem("topbar","partners","List Partners","partners"),Menus.addSubMenuItem("topbar","partners","New Partner","partners/create")}]),angular.module("partners").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPartners",{url:"/partners",templateUrl:"modules/partners/views/list-partners.client.view.html"}).state("createPartner",{url:"/partners/create",templateUrl:"modules/partners/views/create-partner.client.view.html"}).state("viewPartner",{url:"/partners/:partnerId",templateUrl:"modules/partners/views/view-partner.client.view.html"}).state("editPartner",{url:"/partners/:partnerId/edit",templateUrl:"modules/partners/views/edit-partner.client.view.html"})}]),angular.module("partners").controller("PartnersController",["$scope","$stateParams","$location","Authentication","Partners","Uploads",function($scope,$stateParams,$location,Authentication,Partners,Uploads){$scope.authentication=Authentication,$scope.create=function(){var partner=new Partners({name:this.name}),errorFunction=function(errorResponse){$scope.error=errorResponse.data.message};Uploads.upload($scope.photo).success(function(data){partner.photo=data.files[0].url,partner.$save(function(response){$location.path("partners/"+response._id)},errorFunction)}),this.name=""},$scope.remove=function(partner){if(partner){partner.$remove();for(var i in $scope.partners)$scope.partners[i]===partner&&$scope.partners.splice(i,1)}else $scope.partner.$remove(function(){$location.path("partners")})},$scope.update=function(){var partner=$scope.partner,errorFunction=function(errorResponse){$scope.error=errorResponse.data.message},updatePartner=function(){partner.$update(function(){$location.path("partners/"+partner._id)},errorFunction)};"undefined"!=typeof $scope.photo?Uploads.updatePhoto($scope.photo,partner,updatePartner):updatePartner(),partner.$update(function(){$location.path("partners/"+partner._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.partners=Partners.query()},$scope.findOne=function(){$scope.partner=Partners.get({partnerId:$stateParams.partnerId})}}]),angular.module("partners").factory("Partners",["$resource",function($resource){return $resource("partners/:partnerId",{partnerId:"@_id"},{update:{method:"PUT"}})}]),angular.module("projects").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Projects","projects","dropdown","/projects(/create)?"),Menus.addSubMenuItem("topbar","projects","List Projects","projects"),Menus.addSubMenuItem("topbar","projects","New Project","projects/create")}]),angular.module("projects").config(["$stateProvider",function($stateProvider){$stateProvider.state("listProjects",{url:"/projects",templateUrl:"modules/projects/views/list-projects.client.view.html"}).state("createProject",{url:"/projects/create",templateUrl:"modules/projects/views/create-project.client.view.html"}).state("viewProject",{url:"/projects/:projectId",templateUrl:"modules/projects/views/view-project.client.view.html"}).state("editProject",{url:"/projects/:projectId/edit",templateUrl:"modules/projects/views/edit-project.client.view.html"})}]),angular.module("projects").controller("ProjectsController",["$scope","$stateParams","$location","Authentication","Projects","Uploads",function($scope,$stateParams,$location,Authentication,Projects,Uploads){$scope.authentication=Authentication,$scope.onFileSelect=function($files){$scope.photo=$files[0]},$scope.create=function(){var project=new Projects({name:this.name,content:this.content}),errorFunction=function(errorResponse){$scope.error=errorResponse.data.message};Uploads.upload($scope.photo).success(function(data){project.photo=data.files[0].url,project.$save(function(response){$location.path("projects/"+response._id)},errorFunction)}),this.name="",this.content=""},$scope.remove=function(project){if(project){project.$remove();for(var i in $scope.projects)$scope.projects[i]===project&&$scope.projects.splice(i,1)}else $scope.project.$remove(function(){$location.path("projects")})},$scope.update=function(){var project=$scope.project,errorFunction=function(errorResponse){$scope.error=errorResponse.data.message},updateProject=function(){project.$update(function(){$location.path("projects/"+project._id)},errorFunction)};"undefined"!=typeof $scope.photo?Uploads.updatePhoto($scope.photo,project,updateProject):updateProject()},$scope.find=function(){$scope.projects=Projects.query()},$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId})}}]),angular.module("projects").factory("Projects",["$resource",function($resource){return $resource("projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("stories").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Stories","stories","dropdown","/stories(/create)?",!0),Menus.addSubMenuItem("topbar","stories","List Stories","stories",null,!0),Menus.addSubMenuItem("topbar","stories","New Story","stories/create",null,!1)}]),angular.module("stories").config(["$stateProvider",function($stateProvider){$stateProvider.state("listStories",{url:"/stories",templateUrl:"modules/stories/views/list-stories.client.view.html"}).state("createStory",{url:"/stories/create",templateUrl:"modules/stories/views/create-story.client.view.html"}).state("viewStory",{url:"/stories/:storyId",templateUrl:"modules/stories/views/view-story.client.view.html"}).state("editStory",{url:"/stories/:storyId/edit",templateUrl:"modules/stories/views/edit-story.client.view.html"})}]),angular.module("stories").controller("StoriesController",["$scope","$stateParams","$location","Authentication","Stories",function($scope,$stateParams,$location,Authentication,Stories){$scope.authentication=Authentication,$scope.create=function(){var story=new Stories({name:this.name});story.$save(function(response){$location.path("stories/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(story){if(story){story.$remove();for(var i in $scope.stories)$scope.stories[i]===story&&$scope.stories.splice(i,1)}else $scope.story.$remove(function(){$location.path("stories")})},$scope.update=function(){var story=$scope.story;story.$update(function(){$location.path("stories/"+story._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.stories=Stories.query()},$scope.findOne=function(){$scope.story=Stories.get({storyId:$stateParams.storyId})}}]),angular.module("stories").factory("Stories",["$resource",function($resource){return $resource("stories/:storyId",{storyId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);